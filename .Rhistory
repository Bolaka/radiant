shiny::runApp('inst/base')
shiny::runApp('inst/base')
library(miniCRAN)
install.packages(miniCRAN)
install.packages('miniCRAN')
require(miniCRAN)
pkgs <- c("shiny")
options(repos = c(CRAN = "http://cran.rstudio.com"))
install.packages('miniCRAN')
pkgs <- c("shiny")
pkgList <- pkgDep(pkgs, type="win.binary", suggests = FALSE, )
pkgList
dir.create(pth <- "~/Desktop/radiant-miniCRAN")
makeRepo(pkgList, path=pth, type="win.binary")
makeRepo(pkgList, path=pth, type="mac.binary")
pkgList
# setting the default location to get R-packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
# install.packages('miniCRAN')
require(miniCRAN)
# Specify list of packages to download
pkgs <- c("shiny")
dir.create(pth <- "~/Desktop/radiant-miniCRAN")
# pkgList <- pkgDep(pkgs, repos=revolution, type="source", suggests = FALSE, )
pkgList <- pkgDep(pkgs, type="win.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="win.binary")
pkgList <- pkgDep(pkgs, type="mac.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="mac.binary")
pkgs <- c("shiny")
pkgs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown", "knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
dir.create(pth <- "~/Desktop/radiant-miniCRAN")
# setting the default location to get R-packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
# install.packages('miniCRAN')
require(miniCRAN)
# Specify list of packages to download
pkgs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown", "knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
pth <- "~/Desktop/radiant-miniCRAN"
if(!file.exists(pth)) dir.create(pth)
# building minicran for windows binaries
pkgList <- pkgDep(pkgs, type="win.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="win.binary")
# building minicran for mac binaries
pkgList <- pkgDep(pkgs, type="mac.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="mac.binary")
Sys.getenv("R_LIBS_USER")
options(repos = c(CRAN = "http://cran.rstudio.com"))
# install.packages('miniCRAN')
require(miniCRAN)
# Specify list of packages to download
pkgs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown", "knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
pth <- "~/Dropbox/radiant/launchers/radiant-miniCRAN"
if(!file.exists(pth)) dir.create(pth)
# building minicran for mac binaries
pkgList <- pkgDep(pkgs, type="mac.binary.mavericks", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="mac.binary.mavericks")
# building minicran for windows binaries
pkgList <- pkgDep(pkgs, type="source", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="source")
# building minicran for windows binaries
pkgList <- pkgDep(pkgs, type="win.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="win.binary")
# building minicran for mac binaries
pkgList <- pkgDep(pkgs, type="mac.binary", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="mac.binary")
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
inst.libs
install.packages(inst.libs, local_dir,
repos = "file:///Users/vnijs/Dropbox/radiant/launchers/radiant-miniCRAN/")
install.packages(inst.libs, local_dir, repos = "file:///Users/vnijs/Dropbox/radiant/launchers/radiant-miniCRAN/")
?url
getwd()
path.expand("radiant-miniCRAN")
path.expand("./radiant-miniCRAN")
shiny::runApp('inst/base')
normalizePath("./radiant-miniCRAN")
normalizePath("../radiant-miniCRAN")
url(normalizePath("../radiant-miniCRAN"))
?url
options(repos = c(CRAN = "http://cran.rstudio.com"))
mcran <- url(normalizePath("../radiant-miniCRAN"))
mcran <- normalizePath("../radiant-miniCRAN")
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
options(repos = c(CRAN = "http://cran.rstudio.com"))
mcran <- paste0("file://",normalizePath("../radiant-miniCRAN"))
mcran
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
length(inst.libs) != 0
mran
mcran
if(length(inst.libs) != 0) {
#   install.packages(paste0("../radiant-miniCRAN/",inst.libs), local_dir, repos = NULL, dependencies = TRUE)
install.packages(inst.libs, local_dir, repos = mcran)
suppressWarnings(sapply(inst.libs, require, lib.loc = c(local_dir),
character.only=TRUE))
}
# install required packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
mcran <- paste0("file://",normalizePath("../radiant-miniCRAN"))
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
# install and require the packages that have not yet been installed
if(length(inst.libs) != 0) {
#   install.packages(paste0("../radiant-miniCRAN/",inst.libs), local_dir, repos = NULL, dependencies = TRUE)
install.packages(inst.libs, local_dir, repos = mcran)
suppressWarnings(sapply(inst.libs, require, lib.loc = c(local_dir),
character.only=TRUE))
}
# install required packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
mcran <- paste0("file://",normalizePath("../radiant-miniCRAN"))
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
if(length(inst.libs) != 0) {
#   install.packages(paste0("../radiant-miniCRAN/",inst.libs), local_dir, repos = NULL, dependencies = TRUE)
install.packages(inst.libs, local_dir, repos = mcran)
suppressWarnings(sapply(inst.libs, require, lib.loc = c(local_dir),
character.only=TRUE))
}
# install required packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
mcran <- paste0("file://",normalizePath("../radiant-miniCRAN"))
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
libs <- c("R.methodsS3", "R.oo", "R.utils", "car", "gridExtra", "psych",
"permute", "vegan", "lubridate", "RColorBrewer", "wordcloud", "AlgDesign", "markdown",
"knitr", "plyr", "tidyr", "dplyr", "ggplot2", "shiny", "shinyAce")
# check if all packages in libs are installed locally
available <- suppressWarnings(sapply(libs, require, lib.loc = c(local_dir), character.only=TRUE))
inst.libs <- libs[available == FALSE]
inst.libs
install.packages(inst.libs, local_dir, repos = mcran)
getwd()
setwd("~/Dropbox/radiant/inst/base")
shiny::runApp('inst/base')
shiny::runApp('inst/marketing')
packrat::init(options = list(local.repos = c("~/Desktop/radiant/radiant-miniCRAN")))
packrat::disable()
###############################################################
### RUN OUTSIDE OF RADIANT
###############################################################
# setting the default location to get R-packages
options(repos = c(CRAN = "http://cran.rstudio.com"))
# install to user directory
local_dir <- Sys.getenv("R_LIBS_USER")
if(!file.exists(local_dir)) dir.create(local_dir, recursive = TRUE)
# miniCRAN vignette
# http://cran.r-project.org/web/packages/miniCRAN/vignettes/miniCRAN.html
install.packages('miniCRAN', dependencies = TRUE)
pth <- "~/Desktop/radiant/radiant-miniCRAN"
if(!file.exists(pth)) dir.create(pth)
setwd(pth)
install.packages('./miniCRAN_0.1-0.tgz', local_dir, repos = NULL) # installing local package that fixes makeRepo from miniCRAN
require(miniCRAN)
install.packages('miniCRAN', local_dir, dependencies = TRUE)
install.packages("miniCRAN", local_dir, dependencies = TRUE)
pth <- "~/Desktop/radiant/radiant-miniCRAN"
if(!file.exists(pth)) dir.create(pth)
setwd(pth)
install.packages('./miniCRAN_0.1-0.tgz', local_dir, repos = NULL) # installing local package that fixes makeRepo from miniCRAN
require(miniCRAN)
source('pkgs.R')
# building minicran for windows binaries
pkgList <- pkgDep(pkgs, type="source", suggests = FALSE, )
makeRepo(pkgList, path=pth, type="source")
###############################################################
source('~/Desktop/radiant/radiant-miniCRAN/radiant-miniCRAN.R', echo=TRUE)
source('~/Desktop/radiant/radiant-miniCRAN/dependencies.R', echo=TRUE)
